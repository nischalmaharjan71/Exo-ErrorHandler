@model MODEL.Module

@{
    ViewBag.Title = "AddEdit";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ModuleId)
    <div class="form-horizontal">
        <h4>Module</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModuleDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModuleDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrganizationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.OrganizationId, ViewBag.OrganizationList as SelectList, "--SELECT ORGANIZATION--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrganizationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ProjectId, new SelectList(""), "--SELECT Project--", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
            </div>
        </div>





        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="p-lg-2">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            console.log("ready!");
            $("#OrganizationId").change(function () {
                 
                console.log("ready11!");
                $.get("/Module/GetProjectByOrganizationId", { organizationId: $("#OrganizationId").val() }, function (data) {
                    console.log("ready1111!");

                    $("#ProjectId").empty();
                    $.each(data, function (index, row) {
                        $("#ProjectId").append("<option value='" + row.ProjectId + "'>" + row.ProjectName + "</option>")
                    });
                });
            });
        });
           
    </script>
}
